//Real-Time Ticketing System Backend by Heshan Ratnaweera, Student ID UOW: W2082289 IIT: 20222094.
package com.hkrw2082289.ticketing_system.model;
import jakarta.persistence.*;
import lombok.Data;

/**
 * This class represents the configuration entity for the Real-time ticketing system, including settings related to
 * available ticket count, customer retrieval rates, ticket release rate, max ticket capacity,
 * and administrator credentials like admin username and password.
 *
 * This entity is mapped to the "configuration" table in the database and contains configuration values
 * that control the ticketing system's behavior.
 */
@Data
@Entity
@Table(name = "configuration")
public class Configuration {

    /**
     * This is the unique identifier for the configuration entry.
     * This is automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "config_id")
    private Integer configId;

    /**
     * This is the total number of available tickets in the system.
     * The default value is 0 and cannot be null.
     */
    @Column(name = "total_available_tickets", nullable = false)
    private Integer totalAvailableTickets = 0;

    /**
     * This is the rate at which tickets are released in to the system by vendors.
     * This value must be provided and cannot be null.
     */
    @Column(name = "ticket_release_rate", nullable = false)
    private Double ticketReleaseRate;

    /**
     * This is the rate at which customers retrieve tickets from the system.
     * This value must be provided and cannot be null.
     */
    @Column(name = "customer_retrieval_rate", nullable = false)
    private Double customerRetrievalRate;

    /**
     * This is the maximum ticket capacity allowed for tickets with "Available" ticket_status in the system.
     * This value must be provided and cannot be null.
     */
    @Column(name = "max_ticket_capacity", nullable = false)
    private Integer maxTicketCapacity;

    /**
     * This is the username for the configuration administrator/system admin.
     * This value must be provided and cannot be null, with a maximum length of 50 characters.
     */
    @Column(name = "config_admin_user", nullable = false, length = 50)
    private String configAdminUser;

    /**
     * This is the password for the configuration administrator/system admin.
     * This value must be provided and cannot be null, with a maximum length of 50 characters.
     */
    @Column(name = "config_admin_password", nullable = false, length = 50)
    private String configAdminPassword;
}

